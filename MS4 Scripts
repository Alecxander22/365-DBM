/* Milestone 4- Team 11- Team Phoenix */

-------------------------------------------------------------------------------------------------------

/* BASIC QUERIES */

/* 1. Two INSERT statements in a row â€“ the first one adding a new Pet, the second one adding a new
Boarding for that Pet, should succeed. -ST */

BEGIN TRANSACTION;

INSERT into PETS values ('D00000456', 'C00000003', 'Wobbles', 'Dog', 'Great Dane', '23', '02/02/2018', 'M', 'Y');
INSERT into COLOR values ('D00000456', 'Black');
INSERT into COLOR values ('D00000456', 'Brown');
INSERT into RESERVATIONS values ('10000061','12:15','02:32','11/03/2019','11/03/2019','S70000000', '20.00');
INSERT into RESERVATION_DETAILS values ('10000061','D00000456','Y','Y','0');

SELECT * FROM PETS;
SELECT * FROM COLOR;
SELECT * FROM RESERVATIONS;
SELECT * FROM RESERVATION_DETAILS;

COMMIT;
--------------------------------------------------------------------------------------------------------
/* 2. A similar two INSERT statements executed in the opposite order should fail. -ST */

BEGIN TRANSACTION;

INSERT into RESERVATION_DETAILS values ('10000062','D00000457','Y','Y','0');
INSERT into RESERVATIONS values ('10000062','01:15','02:32','11/04/2019','11/04/2019','S70000000', '10.00');
INSERT into COLOR values ('D00000457', 'Tan');
INSERT into COLOR values ('D00000457', 'Brown');
INSERT into PETS values ('D00000457', 'C00000006', 'Roxy', 'Dog', 'Shih-Tzu', '12', '05/02/2018', 'F', 'Y');

SELECT * FROM RESERVATION_DETAILS;
SELECT * FROM RESERVATIONS;
SELECT * FROM COLOR;
SELECT * FROM PETS;

/* This transaction did not fully execute because Reservation's values needs to be entered before Reservations Detail's Values.
Reservation# in RESERVATION_DETAILS is a foriegn key to RESERVATIONS. */ 

ROLLBACK; 
-------------------------------------------------------------------------------------------------------
/* 3. Adding reservation details without a reservation should fail. -ST */

BEGIN TRANSACTION

INSERT into RESERVATION_DETAILS values ('10000063','D00000458','Y','Y','0');
INSERT into RESERVATIONS values ('10000063','02:15','04:32','11/04/2019','11/04/2019','S90000000', '20.00');

SELECT * FROM RESERVATION_DETAILS;
SELECT * FROM RESERVATIONS;

/* The reservation# in RESERVATION_DETAILS references back to the reservation# in RESERVATIONS, so the DBMS
does not allow RESERVATION_DETAILS values to be entered before RESERVATIONS values. */

ROLLBACK;
--------------------------------------------------------------------------------------------------------
/* 7. Adding a pet to the database, and putting in a customerID that does not exist in the database. -TD */

Insert into PETS Values ('F00000046','C00000089','Snowflake','Cat','Tabby','6.5','08/14/2009','F','Y');
--------------------------------------------------------------------------------------------------------
/* 9. Construct 4 other preliminary tests to show that your database design works - select tests that
you know will make your design fail where it should. -TD */

Insert into RESERVATIONS values ('10000084','12:17','10:56','02/22/2019','02/23/2019','S80000000','Twenty-One');
--------------------------------------------------------------------------------------------------------
/* 10. Construct 4 other preliminary tests to show that your database design works - select tests that
you know will make your design fail where it should. -TD */

Insert into paycheck values ('S10000000', 5,'2014-10-9',90000.00,904261.20)
-------------------------------------------------------------------------------------------------------

/* ADVANCED QUERIES */

/* 1. GROUP BY/HAVING clause */

/* How many female dogs do we have in the database? */

Select Count(petid) as 'Female dogs in the database'
	From Pets
		Group by Species, gender
			Having Species='dog' and Gender='f';
--------------------------------------------------------------------------------------------------------
/* 3. GROUP BY/HAVING clause -TD */

/* How many Pets have had more than one dosage of medication while staying with us? */

Select petid as "Pets with more than 1 Administration of Medication"
	from PET_MEDICATIONS
	group by petid
	having count(petid)>1;
--------------------------------------------------------------------------------------------------------	
/* 4. Fully NESTED query (no joins) that combines 3 or more data tables. -TD */

/* Who had reservation# 10000026? They forgot to pay! */
	
Select CFName, CLName, PhoneAreaCode, Phone
	from Customers
		where customerid in (Select CustomerID
					from Pets
						where petid in(Select Petid
								from RESERVATION_DETAILS
									where Reservation# = '10000026'));
--------------------------------------------------------------------------------------------------------
/* 5. Anthony Abraham wants to know if his pet was given medicine and if so, at what time. Find the information 
and store it as Abrahams_Visit. -ST */

CREATE VIEW Abrahams_Visit AS
SELECT COUNT(TimeAdministered) "Number Of Meds Given", TimeAdministered
 FROM PET_MEDICATIONS 
  WHERE PetID IN
    (SELECT PetID 
       FROM PETS
         WHERE CustomerID IN
          (SELECT CustomerID 
	        FROM CUSTOMERS
	         WHERE CLName = 'Abraham'))
GROUP BY TimeAdministered;

SELECT * FROM Abrahams_Visit;
--------------------------------------------------------------------------------------------------------
/* 6. Management want to know how the second half of the year's third quarter went. 
List the dates of check in and prices paid. Store the information in 2NDhalf_3RDquarter. 
Order by oldest to newest. -ST */

CREATE VIEW "2NDhalf_3RDquarter" AS
SELECT DateOfCheckIn, Price
 FROM RESERVATIONS 
  WHERE DateOfCheckIn Between '09/01/19' and '10/31/19'
GROUP BY DateOfCheckIn, Price; 

SELECT *
 FROM [2NDhalf_3RDquarter]
  ORDER BY DateOfCheckIN;
--------------------------------------------------------------------------------------------------------
/* 7. Which Pets have been given medications before? Store the result as Pets_Given_Medication. -TD */

Create view Pets_Given_Medication as
	select PetID
		from pet_medications
		group by petid

		select* from Pets_Given_Medication;
--------------------------------------------------------------------------------------------------------
